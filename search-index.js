var searchIndex = {};
searchIndex['git2'] = {"items":[[0,"","git2","# libgit2 bindings for Rust"],[1,"Blob","","A structure to represent a git [blob][1]"],[1,"Branch","","A structure to represent a git [branch][1]"],[1,"Branches","","An iterator over the branches inside of a repository."],[1,"Buf","","A structure to wrap an intermediate buffer used by libgit2."],[1,"Commit","","A structure to represent a git [commit][1]"],[1,"Parents","","An iterator over the parent commits of a commit."],[1,"Config","","A structure representing a git configuration key/value store"],[1,"ConfigEntry","","A struct representing a certain entry owned by a `Config` instance."],[1,"ConfigEntries","","An iterator over the `ConfigEntry` values of a `Config` structure."],[1,"Error","","A structure to represent errors coming out of libgit2."],[1,"Index","","A structure to represent a git [index][1]"],[1,"IndexEntry","","A structure to represent an entry or a file inside of an index."],[11,"ctime","","",0],[11,"mtime","","",0],[11,"dev","","",0],[11,"ino","","",0],[11,"mode","","",0],[11,"uid","","",0],[11,"gid","","",0],[11,"file_size","","",0],[11,"id","","",0],[11,"flags","","",0],[11,"flags_extended","","",0],[11,"path","","",0],[1,"Object","","A structure to represent a git [object][1]"],[1,"Oid","","Unique identity of any object (commit, tree, blob, tag)."],[1,"Reference","","A structure to represent a git [reference][1]."],[1,"References","","An iterator over the references in a repository."],[1,"ReferenceNames","","An iterator over the names of references in a repository."],[1,"Refspec","","A structure to represent a git [refspec][1]."],[1,"Remote","","A structure represending a [remote][1] of a git repository."],[1,"Refspecs","","An iterator over the refspecs that a remote contains."],[1,"Repository","","An owned git repository, representing all state associated with the\nunderlying filesystem."],[1,"Revspec","","A revspec represents a range of revisions within a repository."],[1,"Signature","","A Signature is used to indicate authorship of various actions throughout the\nlibrary."],[1,"StringArray","","A string array structure used by libgit2"],[1,"StringArrayItems","","A forward iterator over the strings of an array, casted to `&str`."],[1,"StringArrayBytes","","A forward iterator over the strings of an array, casted to `&[u8]`."],[1,"Submodule","","A structure to represent a git [submodule][1]"],[1,"Tree","","A structure to represent a git [tree][1]"],[1,"TreeEntry","","A structure representing an entry inside of a tree. An entry is borrowed\nfrom a tree."],[2,"ErrorCode","","An enumeration of possible errors that can happen when working with a git\nrepository."],[12,"Error","","Generic error",1],[12,"NotFound","","Requested object could not be found",1],[12,"Exists","","Object exists preventing operation",1],[12,"Ambiguous","","More than one object matches",1],[12,"BufSize","","Output buffer too short to hold data",1],[12,"User","","Operation not allowed on bare repository",1],[12,"BareRepo","","Operation not allowed on bare repository",1],[12,"UnbornBranch","","HEAD refers to branch with no commits",1],[12,"Unmerged","","Merge in progress prevented operation",1],[12,"NotFastForward","","Reference was not fast-forwardable",1],[12,"InvalidSpec","","Name/ref spec was not in a valid format",1],[12,"MergeConflict","","Merge conflicts prevented operation",1],[12,"Locked","","Lock file prevented operation",1],[12,"Modified","","Reference value does not match expected",1],[2,"RepositoryState","","A listing of the possible states that a repository can be in."],[12,"Clean","","",2],[12,"Merge","","",2],[12,"Revert","","",2],[12,"CherryPick","","",2],[12,"Bisect","","",2],[12,"Rebase","","",2],[12,"RebaseInteractive","","",2],[12,"RebaseMerge","","",2],[12,"ApplyMailbox","","",2],[12,"ApplyMailboxOrRebase","","",2],[2,"Direction","","An enumeration of the possible directions for a remote."],[12,"Fetch","","Data will be fetched (read) from this remote.",3],[12,"Push","","Data will be pushed (written) to this remote.",3],[2,"ResetType","","An enumeration of the operations that can be performed for the `reset`\nmethod on a `Repository`."],[12,"Soft","","Move the head to the given commit.",4],[12,"Mixed","","Soft plus reset the index to the commit.",4],[12,"Hard","","Mixed plus changes in the working tree are discarded.",4],[2,"ObjectKind","","An enumeration all possible kinds objects may have."],[12,"Any","","An object which corresponds to a any git object",5],[12,"Commit","","An object which corresponds to a git commit",5],[12,"Tree","","An object which corresponds to a git tree",5],[12,"Blob","","An object which corresponds to a git blob",5],[12,"Tag","","An object which corresponds to a git tag",5],[2,"BranchType","","An enumeration for the possible types of branches"],[12,"Local","","A local branch not on a remote.",6],[12,"Remote","","A branch for a remote.",6],[2,"ConfigLevel","","An enumeration of the possible priority levels of a config file."],[12,"ConfigSystem","","System-wide configuration file, e.g. /etc/gitconfig",7],[12,"ConfigXDG","","XDG-compatible configuration file, e.g. ~/.config/git/config",7],[12,"ConfigGlobal","","User-specific configuration, e.g. ~/.gitconfig",7],[12,"ConfigLocal","","Reopsitory specific config, e.g. $PWD/.git/config",7],[12,"ConfigApp","","Application specific configuration file",7],[12,"ConfigHighest","","Highest level available",7],[0,"build","","Builder-pattern objects for configuration various git operations."],[1,"RepoBuilder","git2::build","A builder struct which is used to build configuration for cloning a new git\nrepository."],[1,"CheckoutBuilder","","A builder struct for configuring checkouts of a repository."],[10,"clone","","",8],[10,"clone","","",9],[10,"new","","Creates a new repository builder with all of the default configuration.",8],[10,"bare","","Indicate whether the repository will be cloned as a bare repository or\nnot.",8],[10,"branch","","Specify the name of the branch to check out after the clone.",8],[10,"signature","","Specify the identity that will be used when updating the reflog.",8],[10,"local","","Set the flag for bypassing the git aware transport mechanism for local\npaths.",8],[10,"hardlinks","","Set the flag for whether hardlinks are used when using a local git-aware\ntransport mechanism.",8],[10,"with_checkout","","Configure the checkout which will be performed by consuming a checkout\nbuilder.",8],[10,"clone","","Clone a remote repository.",8],[10,"new","","Creates a new builder for checkouts with all of its default\nconfiguration.",9],[10,"dry_run","","Indicate that this checkout should perform a dry run by checking for\nconflicts but not make any actual changes.",9],[10,"force","","Take any action necessary to get the working directory to match the\ntarget including potentially discarding modified files.",9],[10,"safe","","Indicate that the checkout should be performed safely, allowing new\nfiles to be created but not overwriting extisting files or changes.",9],[10,"allow_conflicts","","In safe mode, apply safe file updates even when there are conflicts\ninstead of canceling the checkout.",9],[10,"remove_untracked","","Remove untracked files from the working dir.",9],[10,"remove_ignored","","Remove ignored files from the working dir.",9],[10,"update_only","","Only update the contents of files that already exist.",9],[10,"update_index","","Prevents checkout from writing the updated files' information to the\nindex.",9],[10,"refresh","","Indicate whether the index and git attributes should be refreshed from\ndisk before any operations.",9],[10,"skip_unmerged","","Skip files with unmerged index entries.",9],[10,"use_ours","","Indicate whether the checkout should proceed on conflicts by using the\nstage 2 version of the file (\"ours\").",9],[10,"use_theirs","","Indicate whether the checkout should proceed on conflicts by using the\nstage 3 version of the file (\"theirs\").",9],[10,"overwrite_ignored","","Indicate whether ignored files should be overwritten during the checkout.",9],[10,"conflict_style_merge","","Indicate whether a normal merge file should be written for conflicts.",9],[10,"conflict_style_diff3","","Indicates whether to include common ancestor data in diff3 format files\nfor conflicts.",9],[10,"disable_filters","","Indicate whether to apply filters like CRLF conversion.",9],[10,"dir_perm","","Set the mode with which new directories are created.",9],[10,"file_perm","","Set the mode with which new files are created.",9],[10,"path","","Add a path to be checked out.",9],[10,"target_dir","","Set the directory to check out to",9],[10,"ancestor_label","","The name of the common ancestor side of conflicts",9],[10,"our_label","","The name of the common our side of conflicts",9],[10,"their_label","","The name of the common their side of conflicts",9],[10,"configure","","Configure a raw checkout options based on this configuration.",9],[10,"fmt","git2","",1],[10,"clone","","",1],[10,"eq","","",1],[10,"ne","","",1],[10,"fmt","","",2],[10,"clone","","",2],[10,"eq","","",2],[10,"ne","","",2],[10,"eq","","",5],[10,"ne","","",5],[10,"fmt","","",6],[10,"eq","","",6],[10,"ne","","",6],[10,"fmt","","",7],[10,"eq","","",7],[10,"ne","","",7],[10,"str","","Convert an object type to its string representation.",5],[10,"is_loose","","Determine if the given git_otype is a valid loose object type.",5],[10,"from_raw","","Convert a raw git_otype to an ObjectKind",5],[10,"raw","","Convert this kind into its raw representation",5],[10,"from_str","","Convert a string object type representation to its object type.",5],[10,"fmt","","",5],[10,"from_raw","","Converts a raw configuration level to a ConfigLevel",7]],"paths":[[1,"IndexEntry"],[2,"ErrorCode"],[2,"RepositoryState"],[2,"Direction"],[2,"ResetType"],[2,"ObjectKind"],[2,"BranchType"],[2,"ConfigLevel"],[1,"RepoBuilder"],[1,"CheckoutBuilder"]]};
searchIndex['libgit2'] = {"items":[[0,"","libgit2",""],[1,"git_revspec","",""],[11,"from","","",0],[11,"to","","",0],[11,"flags","","",0],[1,"git_error","",""],[11,"message","","",1],[11,"klass","","",1],[1,"git_oid","",""],[11,"id","","",2],[1,"git_strarray","",""],[11,"strings","","",3],[11,"count","","",3],[1,"git_signature","",""],[11,"name","","",4],[11,"email","","",4],[11,"when","","",4],[1,"git_time","",""],[11,"time","","",5],[11,"offset","","",5],[1,"git_revparse_mode_t","",""],[1,"git_clone_options","",""],[11,"version","","",6],[11,"checkout_opts","","",6],[11,"remote_callbacks","","",6],[11,"bare","","",6],[11,"local","","",6],[11,"checkout_branch","","",6],[11,"signature","","",6],[11,"repository_cb","","",6],[11,"repository_cb_payload","","",6],[11,"remote_cb","","",6],[11,"remote_cb_payload","","",6],[1,"git_checkout_options","",""],[11,"version","","",7],[11,"checkout_strategy","","",7],[11,"disable_filters","","",7],[11,"dir_mode","","",7],[11,"file_mode","","",7],[11,"file_open_flags","","",7],[11,"notify_flags","","",7],[11,"notify_cb","","",7],[11,"notify_payload","","",7],[11,"progress_cb","","",7],[11,"progress_payload","","",7],[11,"paths","","",7],[11,"baseline","","",7],[11,"target_directory","","",7],[11,"ancestor_label","","",7],[11,"our_label","","",7],[11,"their_label","","",7],[1,"git_remote_callbacks","",""],[11,"version","","",8],[11,"sideband_progress","","",8],[11,"completion","","",8],[11,"credentials","","",8],[11,"transfer_progress","","",8],[11,"update_tips","","",8],[11,"payload","","",8],[1,"git_transfer_progress","",""],[1,"git_diff_file","",""],[1,"git_buf","",""],[11,"ptr","","",9],[11,"asize","","",9],[11,"size","","",9],[1,"git_index_entry","",""],[11,"ctime","","",10],[11,"mtime","","",10],[11,"dev","","",10],[11,"ino","","",10],[11,"mode","","",10],[11,"uid","","",10],[11,"gid","","",10],[11,"file_size","","",10],[11,"id","","",10],[11,"flags","","",10],[11,"flags_extended","","",10],[11,"path","","",10],[1,"git_index_time","",""],[11,"seconds","","",11],[11,"nanoseconds","","",11],[1,"git_config_entry","",""],[11,"name","","",12],[11,"value","","",12],[11,"level","","",12],[2,"git_blob","",""],[2,"git_branch_iterator","",""],[2,"git_commit","",""],[2,"git_config","",""],[2,"git_config_iterator","",""],[2,"git_cred","",""],[2,"git_index","",""],[2,"git_object","",""],[2,"git_reference","",""],[2,"git_reference_iterator","",""],[2,"git_refspec","",""],[2,"git_remote","",""],[2,"git_repository","",""],[2,"git_submodule","",""],[2,"git_tag","",""],[2,"git_tree","",""],[2,"git_tree_entry","",""],[2,"git_error_code","",""],[12,"GIT_OK","","",13],[12,"GIT_ERROR","","",13],[12,"GIT_ENOTFOUND","","",13],[12,"GIT_EEXISTS","","",13],[12,"GIT_EAMBIGUOUS","","",13],[12,"GIT_EBUFS","","",13],[12,"GIT_EUSER","","",13],[12,"GIT_EBAREREPO","","",13],[12,"GIT_EUNBORNBRANCH","","",13],[12,"GIT_EUNMERGED","","",13],[12,"GIT_ENONFASTFORWARD","","",13],[12,"GIT_EINVALIDSPEC","","",13],[12,"GIT_EMERGECONFLICT","","",13],[12,"GIT_ELOCKED","","",13],[12,"GIT_EMODIFIED","","",13],[12,"GIT_PASSTHROUGH","","",13],[12,"GIT_ITEROVER","","",13],[2,"git_repository_state_t","",""],[12,"GIT_REPOSITORY_STATE_NONE","","",14],[12,"GIT_REPOSITORY_STATE_MERGE","","",14],[12,"GIT_REPOSITORY_STATE_REVERT","","",14],[12,"GIT_REPOSITORY_STATE_CHERRYPICK","","",14],[12,"GIT_REPOSITORY_STATE_BISECT","","",14],[12,"GIT_REPOSITORY_STATE_REBASE","","",14],[12,"GIT_REPOSITORY_STATE_REBASE_INTERACTIVE","","",14],[12,"GIT_REPOSITORY_STATE_REBASE_MERGE","","",14],[12,"GIT_REPOSITORY_STATE_APPLY_MAILBOX","","",14],[12,"GIT_REPOSITORY_STATE_APPLY_MAILBOX_OR_REBASE","","",14],[2,"git_direction","",""],[12,"GIT_DIRECTION_FETCH","","",15],[12,"GIT_DIRECTION_PUSH","","",15],[2,"git_clone_local_t","",""],[12,"GIT_CLONE_LOCAL_AUTO","","",16],[12,"GIT_CLONE_LOCAL","","",16],[12,"GIT_CLONE_NO_LOCAL","","",16],[12,"GIT_CLONE_LOCAL_NO_LINKS","","",16],[2,"git_remote_completion_type","",""],[12,"GIT_REMOTE_COMPLETION_DOWNLOAD","","",17],[12,"GIT_REMOTE_COMPLETION_INDEXING","","",17],[12,"GIT_REMOTE_COMPLETION_ERROR","","",17],[2,"git_checkout_notify_t","",""],[12,"GIT_CHECKOUT_NOTIFY_NONE","","",18],[12,"GIT_CHECKOUT_NOTIFY_CONFLICT","","",18],[12,"GIT_CHECKOUT_NOTIFY_DIRTY","","",18],[12,"GIT_CHECKOUT_NOTIFY_UPDATED","","",18],[12,"GIT_CHECKOUT_NOTIFY_UNTRACKED","","",18],[12,"GIT_CHECKOUT_NOTIFY_IGNORED","","",18],[12,"GIT_CHECKOUT_NOTIFY_ALL","","",18],[2,"git_checkout_strategy_t","",""],[12,"GIT_CHECKOUT_NONE","","",19],[12,"GIT_CHECKOUT_SAFE","","",19],[12,"GIT_CHECKOUT_SAFE_CREATE","","",19],[12,"GIT_CHECKOUT_FORCE","","",19],[12,"GIT_CHECKOUT_ALLOW_CONFLICTS","","",19],[12,"GIT_CHECKOUT_REMOVE_UNTRACKED","","",19],[12,"GIT_CHECKOUT_REMOVE_IGNORED","","",19],[12,"GIT_CHECKOUT_UPDATE_ONLY","","",19],[12,"GIT_CHECKOUT_DONT_UPDATE_INDEX","","",19],[12,"GIT_CHECKOUT_NO_REFRESH","","",19],[12,"GIT_CHECKOUT_SKIP_UNMERGED","","",19],[12,"GIT_CHECKOUT_USE_OURS","","",19],[12,"GIT_CHECKOUT_USE_THEIRS","","",19],[12,"GIT_CHECKOUT_DISABLE_PATHSPEC_MATCH","","",19],[12,"GIT_CHECKOUT_SKIP_LOCKED_DIRECTORIES","","",19],[12,"GIT_CHECKOUT_DONT_OVERWRITE_IGNORED","","",19],[12,"GIT_CHECKOUT_CONFLICT_STYLE_MERGE","","",19],[12,"GIT_CHECKOUT_CONFLICT_STYLE_DIFF3","","",19],[12,"GIT_CHECKOUT_UPDATE_SUBMODULES","","",19],[12,"GIT_CHECKOUT_UPDATE_SUBMODULES_IF_CHANGED","","",19],[2,"git_reset_t","",""],[12,"GIT_RESET_SOFT","","",20],[12,"GIT_RESET_MIXED","","",20],[12,"GIT_RESET_HARD","","",20],[2,"git_otype","",""],[12,"GIT_OBJ_ANY","","",21],[12,"GIT_OBJ_BAD","","",21],[12,"GIT_OBJ__EXT1","","",21],[12,"GIT_OBJ_COMMIT","","",21],[12,"GIT_OBJ_TREE","","",21],[12,"GIT_OBJ_BLOB","","",21],[12,"GIT_OBJ_TAG","","",21],[12,"GIT_OBJ__EXT2","","",21],[12,"GIT_OBJ_OFS_DELTA","","",21],[12,"GIT_OBJ_REF_DELTA","","",21],[2,"git_ref_t","",""],[12,"GIT_REF_INVALID","","",22],[12,"GIT_REF_OID","","",22],[12,"GIT_REF_SYMBOLIC","","",22],[12,"GIT_REF_LISTALL","","",22],[2,"git_filemode_t","",""],[12,"GIT_FILEMODE_UNREADABLE","","",23],[12,"GIT_FILEMODE_TREE","","",23],[12,"GIT_FILEMODE_BLOB","","",23],[12,"GIT_FILEMODE_BLOB_EXECUTABLE","","",23],[12,"GIT_FILEMODE_LINK","","",23],[12,"GIT_FILEMODE_COMMIT","","",23],[2,"git_treewalk_mode","",""],[12,"GIT_TREEWALK_PRE","","",24],[12,"GIT_TREEWALK_POST","","",24],[2,"git_branch_t","",""],[12,"GIT_BRANCH_LOCAL","","",25],[12,"GIT_BRANCH_REMOTE","","",25],[12,"GIT_BRANCH_ALL","","",25],[2,"git_config_level_t","",""],[12,"GIT_CONFIG_LEVEL_SYSTEM","","",26],[12,"GIT_CONFIG_LEVEL_XDG","","",26],[12,"GIT_CONFIG_LEVEL_GLOBAL","","",26],[12,"GIT_CONFIG_LEVEL_LOCAL","","",26],[12,"GIT_CONFIG_LEVEL_APP","","",26],[12,"GIT_CONFIG_HIGHEST_LEVEL","","",26],[2,"git_submodule_update_t","",""],[12,"GIT_SUBMODULE_UPDATE_RESET","","",27],[12,"GIT_SUBMODULE_UPDATE_CHECKOUT","","",27],[12,"GIT_SUBMODULE_UPDATE_REBASE","","",27],[12,"GIT_SUBMODULE_UPDATE_MERGE","","",27],[12,"GIT_SUBMODULE_UPDATE_NONE","","",27],[12,"GIT_SUBMODULE_UPDATE_DEFAULT","","",27],[2,"git_submodule_ignore_t","",""],[12,"GIT_SUBMODULE_IGNORE_RESET","","",28],[12,"GIT_SUBMODULE_IGNORE_NONE","","",28],[12,"GIT_SUBMODULE_IGNORE_UNTRACKED","","",28],[12,"GIT_SUBMODULE_IGNORE_DIRTY","","",28],[12,"GIT_SUBMODULE_IGNORE_ALL","","",28],[12,"GIT_SUBMODULE_IGNORE_DEFAULT","","",28],[13,"git_threads_init","",""],[13,"git_threads_shutdown","",""],[13,"git_repository_free","",""],[13,"git_repository_open","",""],[13,"git_repository_init","",""],[13,"git_repository_get_namespace","",""],[13,"git_repository_head","",""],[13,"git_repository_is_bare","",""],[13,"git_repository_is_empty","",""],[13,"git_repository_is_shallow","",""],[13,"git_repository_path","",""],[13,"git_repository_state","",""],[13,"git_repository_workdir","",""],[13,"git_repository_index","",""],[13,"git_repository_config","",""],[13,"git_repository_config_snapshot","",""],[13,"git_revparse","",""],[13,"git_revparse_single","",""],[13,"git_object_dup","",""],[13,"git_object_id","",""],[13,"git_object_free","",""],[13,"git_object_lookup","",""],[13,"git_object_type","",""],[13,"git_object_peel","",""],[13,"git_object_short_id","",""],[13,"git_object_type2string","",""],[13,"git_object_string2type","",""],[13,"git_object_typeisloose","",""],[13,"git_oid_fromraw","",""],[13,"git_oid_fromstrn","",""],[13,"git_oid_tostr","",""],[13,"git_oid_cmp","",""],[13,"git_oid_equal","",""],[13,"git_oid_streq","",""],[13,"giterr_last","",""],[13,"giterr_clear","",""],[13,"giterr_detach","",""],[13,"git_remote_create","",""],[13,"git_remote_load","",""],[13,"git_remote_create_anonymous","",""],[13,"git_remote_delete","",""],[13,"git_remote_free","",""],[13,"git_remote_name","",""],[13,"git_remote_pushurl","",""],[13,"git_remote_refspec_count","",""],[13,"git_remote_url","",""],[13,"git_remote_connect","",""],[13,"git_remote_connected","",""],[13,"git_remote_disconnect","",""],[13,"git_remote_save","",""],[13,"git_remote_add_fetch","",""],[13,"git_remote_add_push","",""],[13,"git_remote_check_cert","",""],[13,"git_remote_clear_refspecs","",""],[13,"git_remote_download","",""],[13,"git_remote_dup","",""],[13,"git_remote_get_fetch_refspecs","",""],[13,"git_remote_get_refspec","",""],[13,"git_remote_is_valid_name","",""],[13,"git_remote_valid_url","",""],[13,"git_remote_supported_url","",""],[13,"git_remote_list","",""],[13,"git_remote_rename","",""],[13,"git_remote_fetch","",""],[13,"git_remote_update_tips","",""],[13,"git_remote_update_fetchhead","",""],[13,"git_remote_set_url","",""],[13,"git_remote_set_pushurl","",""],[13,"git_remote_set_update_fetchhead","",""],[13,"git_remote_set_fetch_refspecs","",""],[13,"git_remote_set_push_refspecs","",""],[13,"git_refspec_direction","",""],[13,"git_refspec_dst","",""],[13,"git_refspec_dst_matches","",""],[13,"git_refspec_src","",""],[13,"git_refspec_src_matches","",""],[13,"git_refspec_force","",""],[13,"git_refspec_string","",""],[13,"git_strarray_free","",""],[13,"git_signature_default","",""],[13,"git_signature_free","",""],[13,"git_signature_new","",""],[13,"git_signature_now","",""],[13,"git_signature_dup","",""],[13,"git_clone","",""],[13,"git_clone_init_options","",""],[13,"git_reset","",""],[13,"git_reset_default","",""],[13,"git_reference_cmp","",""],[13,"git_reference_delete","",""],[13,"git_reference_free","",""],[13,"git_reference_is_branch","",""],[13,"git_reference_is_note","",""],[13,"git_reference_is_remote","",""],[13,"git_reference_is_tag","",""],[13,"git_reference_is_valid_name","",""],[13,"git_reference_lookup","",""],[13,"git_reference_name","",""],[13,"git_reference_name_to_id","",""],[13,"git_reference_rename","",""],[13,"git_reference_resolve","",""],[13,"git_reference_shorthand","",""],[13,"git_reference_symbolic_target","",""],[13,"git_reference_target","",""],[13,"git_reference_target_peel","",""],[13,"git_reference_type","",""],[13,"git_reference_iterator_new","",""],[13,"git_reference_iterator_glob_new","",""],[13,"git_reference_iterator_free","",""],[13,"git_reference_next","",""],[13,"git_reference_next_name","",""],[13,"git_reference_create","",""],[13,"git_reference_symbolic_create","",""],[13,"git_submodule_add_finalize","",""],[13,"git_submodule_add_setup","",""],[13,"git_submodule_add_to_index","",""],[13,"git_submodule_branch","",""],[13,"git_submodule_foreach","",""],[13,"git_submodule_free","",""],[13,"git_submodule_head_id","",""],[13,"git_submodule_index_id","",""],[13,"git_submodule_init","",""],[13,"git_submodule_location","",""],[13,"git_submodule_lookup","",""],[13,"git_submodule_name","",""],[13,"git_submodule_open","",""],[13,"git_submodule_path","",""],[13,"git_submodule_reload","",""],[13,"git_submodule_reload_all","",""],[13,"git_submodule_save","",""],[13,"git_submodule_set_ignore","",""],[13,"git_submodule_set_update","",""],[13,"git_submodule_set_url","",""],[13,"git_submodule_sync","",""],[13,"git_submodule_update","",""],[13,"git_submodule_url","",""],[13,"git_submodule_wd_id","",""],[13,"git_blob_free","",""],[13,"git_blob_id","",""],[13,"git_blob_is_binary","",""],[13,"git_blob_lookup","",""],[13,"git_blob_lookup_prefix","",""],[13,"git_blob_rawcontent","",""],[13,"git_blob_rawsize","",""],[13,"git_blob_create_frombuffer","",""],[13,"git_blob_create_fromdisk","",""],[13,"git_blob_create_fromworkdir","",""],[13,"git_tree_entry_byid","",""],[13,"git_tree_entry_byindex","",""],[13,"git_tree_entry_byname","",""],[13,"git_tree_entry_bypath","",""],[13,"git_tree_entry_cmp","",""],[13,"git_tree_entry_dup","",""],[13,"git_tree_entry_filemode","",""],[13,"git_tree_entry_filemode_raw","",""],[13,"git_tree_entry_free","",""],[13,"git_tree_entry_id","",""],[13,"git_tree_entry_name","",""],[13,"git_tree_entry_to_object","",""],[13,"git_tree_entry_type","",""],[13,"git_tree_entrycount","",""],[13,"git_tree_free","",""],[13,"git_tree_id","",""],[13,"git_tree_lookup","",""],[13,"git_tree_walk","",""],[13,"git_buf_free","",""],[13,"git_buf_grow","",""],[13,"git_buf_set","",""],[13,"git_commit_author","",""],[13,"git_commit_committer","",""],[13,"git_commit_free","",""],[13,"git_commit_id","",""],[13,"git_commit_lookup","",""],[13,"git_commit_message","",""],[13,"git_commit_message_encoding","",""],[13,"git_commit_message_raw","",""],[13,"git_commit_nth_gen_ancestor","",""],[13,"git_commit_parent","",""],[13,"git_commit_parent_id","",""],[13,"git_commit_parentcount","",""],[13,"git_commit_raw_header","",""],[13,"git_commit_summary","",""],[13,"git_commit_time","",""],[13,"git_commit_time_offset","",""],[13,"git_commit_tree","",""],[13,"git_commit_tree_id","",""],[13,"git_commit_amend","",""],[13,"git_commit_create","",""],[13,"git_branch_create","",""],[13,"git_branch_delete","",""],[13,"git_branch_is_head","",""],[13,"git_branch_iterator_free","",""],[13,"git_branch_iterator_new","",""],[13,"git_branch_lookup","",""],[13,"git_branch_move","",""],[13,"git_branch_name","",""],[13,"git_branch_next","",""],[13,"git_branch_set_upstream","",""],[13,"git_branch_upstream","",""],[13,"git_index_add","",""],[13,"git_index_add_all","",""],[13,"git_index_add_bypath","",""],[13,"git_index_clear","",""],[13,"git_index_entry_stage","",""],[13,"git_index_entrycount","",""],[13,"git_index_find","",""],[13,"git_index_free","",""],[13,"git_index_get_byindex","",""],[13,"git_index_get_bypath","",""],[13,"git_index_new","",""],[13,"git_index_open","",""],[13,"git_index_path","",""],[13,"git_index_read","",""],[13,"git_index_read_tree","",""],[13,"git_index_remove","",""],[13,"git_index_remove_all","",""],[13,"git_index_remove_bypath","",""],[13,"git_index_remove_directory","",""],[13,"git_index_update_all","",""],[13,"git_index_write","",""],[13,"git_index_write_tree","",""],[13,"git_index_write_tree_to","",""],[13,"git_config_add_file_ondisk","",""],[13,"git_config_delete_entry","",""],[13,"git_config_delete_multivar","",""],[13,"git_config_find_global","",""],[13,"git_config_find_system","",""],[13,"git_config_find_xdg","",""],[13,"git_config_free","",""],[13,"git_config_get_bool","",""],[13,"git_config_get_entry","",""],[13,"git_config_get_int32","",""],[13,"git_config_get_int64","",""],[13,"git_config_get_string","",""],[13,"git_config_iterator_free","",""],[13,"git_config_iterator_glob_new","",""],[13,"git_config_iterator_new","",""],[13,"git_config_new","",""],[13,"git_config_next","",""],[13,"git_config_open_default","",""],[13,"git_config_open_global","",""],[13,"git_config_open_level","",""],[13,"git_config_open_ondisk","",""],[13,"git_config_parse_bool","",""],[13,"git_config_parse_int32","",""],[13,"git_config_parse_int64","",""],[13,"git_config_refresh","",""],[13,"git_config_set_bool","",""],[13,"git_config_set_int32","",""],[13,"git_config_set_int64","",""],[13,"git_config_set_string","",""],[13,"git_config_snapshot","",""],[4,"git_off_t","",""],[4,"git_time_t","",""],[4,"git_checkout_notify_cb","",""],[4,"git_checkout_progress_cb","",""],[4,"git_transport_message_cb","",""],[4,"git_cred_acquire_cb","",""],[4,"git_transfer_progress_cb","",""],[4,"git_repository_create_cb","",""],[4,"git_remote_create_cb","",""],[4,"git_treewalk_cb","",""],[4,"git_index_matched_path_cb","",""],[5,"GIT_OID_RAWSZ","",""],[5,"GIT_OID_HEXSZ","",""],[5,"GIT_CLONE_OPTIONS_VERSION","",""],[5,"GIT_CHECKOUT_OPTIONS_VERSION","",""],[5,"GIT_REMOTE_CALLBACKS_VERSION","",""],[5,"GIT_REVPARSE_SINGLE","",""],[5,"GIT_REVPARSE_RANGE","",""],[5,"GIT_REVPARSE_MERGE_BASE","",""],[10,"hash","","",29],[10,"cmp","","",29],[10,"partial_cmp","","",29],[10,"lt","","",29],[10,"le","","",29],[10,"gt","","",29],[10,"ge","","",29],[10,"clone","","",29],[10,"eq","","",29],[10,"ne","","",29],[10,"empty","","Returns an empty set of flags.",29],[10,"all","","Returns the set containing all flags.",29],[10,"bits","","Returns the raw value of the flags currently stored.",29],[10,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",29],[10,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",29],[10,"is_empty","","Returns `true` if no flags are currently stored.",29],[10,"is_all","","Returns `true` if all flags are currently set.",29],[10,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",29],[10,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",29],[10,"insert","","Inserts the specified flags in-place.",29],[10,"remove","","Removes the specified flags in-place.",29],[10,"bitor","","Returns the union of the two sets of flags.",29],[10,"bitand","","Returns the intersection between the two sets of flags.",29],[10,"sub","","Returns the set difference of the two sets of flags.",29],[10,"not","","Returns the complement of this set of flags.",29],[10,"fmt","","",13],[10,"clone","","",13],[10,"eq","","",13],[10,"ne","","",13]],"paths":[[1,"git_revspec"],[1,"git_error"],[1,"git_oid"],[1,"git_strarray"],[1,"git_signature"],[1,"git_time"],[1,"git_clone_options"],[1,"git_checkout_options"],[1,"git_remote_callbacks"],[1,"git_buf"],[1,"git_index_entry"],[1,"git_index_time"],[1,"git_config_entry"],[2,"git_error_code"],[2,"git_repository_state_t"],[2,"git_direction"],[2,"git_clone_local_t"],[2,"git_remote_completion_type"],[2,"git_checkout_notify_t"],[2,"git_checkout_strategy_t"],[2,"git_reset_t"],[2,"git_otype"],[2,"git_ref_t"],[2,"git_filemode_t"],[2,"git_treewalk_mode"],[2,"git_branch_t"],[2,"git_config_level_t"],[2,"git_submodule_update_t"],[2,"git_submodule_ignore_t"],[1,"git_revparse_mode_t"]]};

searchIndex['link-config'] = {"items":[[0,"","link-config",""],[3,"plugin_registrar","",""]],"paths":[]};

initSearch(searchIndex);
